#!/bin/bash
set -x 
#
# Copies a pdebuild output to the repository staging area, and adds the package to the repository.
# 
REPO_SERVER=tatumaster.ddns.net
REPO_USER=root
REPO_BASEDIR=/srv/reprepro/ubuntu/
BUILD_USER=devel
BUILD_SERVER=tatubuild.ddns.net
BUILD_BASEDIR=/var/cache/pbuilder/
BUILD_CODENAME=precise
BUILD_UPSTREAM_WWW=http://${BUILD_SERVER}/upstream/
SSH_PORT=3022
ARCH="i386 amd64"
VERSION=
NAME=

if [ -f /etc/taturepo.conf ]; then
    . /etc/taturepo.conf
fi

if [ -f ~/.taturepo ]; then
    . ~/.taturepo
fi

ONLY_BUILD=0
while getopts ":ba:n:v:" opt; do
    case $opt in
        a)
            ARCH=$OPTARG
            ;;
        n)
            NAME=$OPTARG
            ;;
        v)
            VERSION=$OPTARG
            ;;
        b)
            ONLY_BUILD=1
            ;;
         \?)
           echo "Invalid option: -$OPTARG" >&2
           ;;
    esac
done

if [ "$NAME" = "" -o "$VERSION" = "" ]; then
    cat >&2 <<USAGE
Usage: $0 [-a ARCH] -n <package name> -v <version> [-b]
    -b (optional) Only build the package, do not add it to the repository.
USAGE
    exit 1
fi

ARCH_LIST=(${ARCH})

if [ "${#ARCH_LIST[@]}" -lt 1 ]; then
    echo "Must provide at least one architecture." >&2
    exit 1
fi

ssh -t -p ${SSH_PORT} -A ${BUILD_USER}@${BUILD_SERVER} "tatu-build -a '${ARCH}' -n ${NAME} -v ${VERSION}"
[ $? -ne 0 ] && echo 'Git build failed.' >&2 && exit 1;

FILE_VERSION=${VERSION/[0-9]_/}

# Copy built files to repository server for publishing.
TEMP_BUILD_DIR=`mktemp -d`
for arch in "${ARCH_LIST[@]}"; do
    mkdir ${TEMP_BUILD_DIR}/${arch}
    scp -P ${SSH_PORT} ${BUILD_USER}@${BUILD_SERVER}:${BUILD_BASEDIR}/${BUILD_CODENAME}-${arch}/result/${NAME}*${FILE_VERSION}[_.]* ${TEMP_BUILD_DIR}/${arch}/ 2>&1
    scp -P ${SSH_PORT} ${BUILD_USER}@${BUILD_SERVER}:${BUILD_BASEDIR}/${BUILD_CODENAME}-${arch}/result/${NAME}*.tar.* ${TEMP_BUILD_DIR}/${arch}/ 2>&1
    if [ $? -ne 0 ]; then 
        echo "No files for ${arch} architecture."
        rm -rf ${TEMP_BUILD_DIR}/${arch}
    else 
        echo "Copying built files to server staging area."
        scp -P ${SSH_PORT} ${TEMP_BUILD_DIR}/${arch}/* ${REPO_USER}@${REPO_SERVER}:staging-${arch}/
    fi
done

if [[ ${ONLY_BUILD} -eq 0 ]]; then

    # Copy tatu-repo & tatu-repo-update to HTTP server root folder, and link current published version.
    if [ "${NAME}" = "tatu-repo" -o "${NAME}" = "tatu-repo-update" ]; then
	    ssh -t -p ${SSH_PORT} ${REPO_USER}@${REPO_SERVER} 'bash -sh'<<EOF
cp staging-${ARCH_LIST[0]}/${NAME}_${FILE_VERSION}_all.deb ${REPO_WEBROOT};
ln -f -s ${REPO_WEBROOT}/${NAME}_${FILE_VERSION}_all.deb ${REPO_WEBROOT}/${NAME}.deb
EOF
    fi

    [ $? -ne 0 ] && echo 'Copy to server staging area failed.' >&2 && exit 1;
    for arch in "${ARCH_LIST[@]}"; do
        if [ -d ${TEMP_BUILD_DIR}/${arch}/ ]; then
	        ssh -t -p ${SSH_PORT} ${REPO_USER}@${REPO_SERVER} "reprepro --basedir ${REPO_BASEDIR} include ${REPO_CODENAME} staging-${arch}/${NAME}_${FILE_VERSION}_${arch}.changes"
        fi
    done
fi

rm -rf ${TEMP_BUILD_DIR}
