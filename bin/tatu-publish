#!/bin/bash

#
# Copies a pdebuild output to the repository staging area, and adds the package to the repository.
# 
REPO_SERVER=tatu
REPO_USER=root
REPO_BASEDIR=/srv/reprepro/ubuntu/
BUILD_USER=devel
BUILD_SERVER=taturepo1.ddns.net
BUILD_BASEDIR=/var/cache/pbuilder/
BUILD_CODENAME=precise
BUILD_UPSTREAM_WWW=http://${BUILD_SERVER}/upstream/
ARCH="i386 amd64"
VERSION=
NAME=

if [ -e ~/.taturepo ]; then
    . ~/.taturepo
fi

while getopts ":a:n:v:" opt; do
    case $opt in
        a)
            ARCH=$OPTARG
            ;;
        n)
            NAME=$OPTARG
            ;;
        v)
            VERSION=$OPTARG
            ;;
         \?)
           echo "Invalid option: -$OPTARG" >&2
           ;;
    esac
done

if [ "$NAME" = "" -o "$VERSION" = "" ]; then
    cat >&2 <<USAGE
Usage: $0 [-a ARCH] -n <package name> -v <version>  
USAGE
    exit 1
fi

ARCH_LIST=(${ARCH})

if [ "${#ARCH_LIST[@]}" -lt 1 ]; then
    echo "Must provide at least one architecture." >&2
    exit 1
fi

ssh -A ${BUILD_USER}@${BUILD_SERVER} "tatu-build -n ${NAME} -v ${VERSION}"
[ $? -ne 0 ] && echo 'Git build failed.' >&2 && exit 1;

# Copy built files to repository server for publishing.
for arch in "${ARCH_LIST[@]}"; do
	scp ${BUILD_USER}@${BUILD_SERVER}:${BUILD_BASEDIR}/${BUILD_CODENAME}-${arch}/result/${NAME}_${VERSION}[_.]* ${REPO_USER}@${REPO_SERVER}:staging-${arch}/
done

# Copy tatu-repo & tatu-repo-update to HTTP server root folder, and link current published version.
if [ "${NAME}" = "tatu-repo" -o "${NAME}" = "tatu-repo-update" ]; then
	ssh ${REPO_USER}@${REPO_SERVER} 'bash -sh'<<EOF
cp staging-${ARCH_LIST[0]}/${NAME}_${VERSION}_all.deb ${REPO_WEBROOT};
ln -f -s ${REPO_WEBROOT}/${NAME}_${VERSION}_all.deb ${REPO_WEBROOT}/${NAME}.deb
EOF
fi

[ $? -ne 0 ] && echo 'Copy to server staging area failed.' >&2 && exit 1;
for arch in "${ARCH_LIST[@]}"; do
	ssh ${REPO_USER}@${REPO_SERVER} "reprepro --basedir ${REPO_BASEDIR} include ${REPO_CODENAME} staging-${arch}/${NAME}_${VERSION}_${arch}.changes"
done
